name: Create Draft Release

on:
  push:
    tags:
      - "v*"

jobs:
  draft_release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: "^1.22"
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install -y llvm clang libbpf-dev gcc-multilib linux-headers-$(uname -r)

      - name: Build
        run: |
          make build

      - name: Create Licenses Report
        run: |
          make licenses-report
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: out/*.*
          # body_path: _releasenotes/${{ env.RELEASE_TAG }}.md

  build_image:
    name: Build and Push Release Image
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        image: ["das-schiff-network-operator", "das-schiff-cra-frr", "das-schiff-nwop-agent-cra-frr", "das-schiff-nwop-agent-netplan", "das-schiff-nwop-agent-hbn-l2"]
        arch: ["amd64", "arm64"]
        include:
          - runner: ubuntu-latest
            arch: "amd64"
          - runner: ubuntu-24.04-arm
            arch: "arm64"
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: "^1.22"

      - name: Create Licenses Report
        run: |
          make licenses-report

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ghcr.io/telekom/${{ matrix.image }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5.2.0
        with:
          context: .
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ matrix.image }}.Dockerfile

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests-${{ matrix.image }}/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.arch }}-${{ matrix.image }}
          path: ${{ runner.temp }}/digests-${{ matrix.image }}/*
          if-no-files-found: error
          retention-days: 1

  release_image:
    runs-on: ubuntu-latest
    needs:
      - build_image
    strategy:
      matrix:
        image: ["das-schiff-network-operator", "das-schiff-cra-frr", "das-schiff-nwop-agent-cra-frr", "das-schiff-nwop-agent-netplan", "das-schiff-nwop-agent-hbn-l2"]
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-${{ matrix.image }}-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ghcr.io/telekom/${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/telekom/${{ matrix.image }}@sha256:%s ' *)
