name: Create Draft Release

on:
  push:
    tags:
      - "v*"

jobs:
  draft_release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: "^1.22"
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install -y llvm clang libbpf-dev gcc-multilib linux-headers-$(uname -r)

      - name: Build
        run: |
          make build

      - name: Create Licenses Report
        run: |
          make licenses-report
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: out/*.*
          # body_path: _releasenotes/${{ env.RELEASE_TAG }}.md

  release_amd64_image:
    name: Build and Push Release amd64 Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ["das-schiff-network-operator", "das-schiff-cra-frr", "das-schiff-nwop-agent-cra-frr", "das-schiff-nwop-agent-netplan", "das-schiff-nwop-agent-hbn-l2"]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: "^1.22"

      - name: Create Licenses Report
        run: |
          make licenses-report

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ghcr.io/telekom/${{ matrix.image }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5.2.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ matrix.image }}.Dockerfile

  release_arm64_image:
    name: Build and Push Release arm64 Image
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        image: ["das-schiff-network-operator", "das-schiff-cra-frr", "das-schiff-nwop-agent-cra-frr", "das-schiff-nwop-agent-netplan", "das-schiff-nwop-agent-hbn-l2"]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: "^1.22"

      - name: Create Licenses Report
        run: |
          make licenses-report

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ghcr.io/telekom/${{ matrix.image }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5.2.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ matrix.image }}.Dockerfile
